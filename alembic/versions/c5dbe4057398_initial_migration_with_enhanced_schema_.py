"""Initial migration with enhanced schema - final

Revision ID: c5dbe4057398
Revises: 
Create Date: 2025-07-18 13:48:38.851267

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'c5dbe4057398'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dense_report',
    sa.Column('id', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('user', sa.String(length=20), nullable=True),
    sa.Column('doctor', sa.String(length=20), nullable=True),
    sa.Column('submitTime', sa.Date(), server_default=sa.text('(CURDATE())'), nullable=True),
    sa.Column('current_status', sa.Enum('Checking', 'Completed', 'Abnormality', 'Error', name='reportstatus'), server_default=sa.text("'Checking'"), nullable=True),
    sa.Column('diagnose', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['doctor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dense_report_doctor'), 'dense_report', ['doctor'], unique=False)
    op.create_index(op.f('ix_dense_report_user'), 'dense_report', ['user'], unique=False)
    op.create_table('doctor',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('position', sa.String(length=20), nullable=True),
    sa.Column('workplace', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permission',
    sa.Column('role_id', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('permission_id', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('granted_at', sa.DateTime(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('granted_by', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user_detail',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('sex', sa.Enum('Female', 'Male', name='usersex'), nullable=True),
    sa.Column('birth', sa.Date(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('avatar', mysql.BIGINT(display_width=20), nullable=True),
    sa.ForeignKeyConstraint(['avatar'], ['image.id'], ),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_detail_avatar'), 'user_detail', ['avatar'], unique=False)
    op.create_table('user_role',
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('role_id', mysql.BIGINT(display_width=20), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_session',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('token', sa.String(length=512), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index('idx_user_session_expires', 'user_session', ['expires_at'], unique=False)
    op.create_index('idx_user_session_token', 'user_session', ['token'], unique=False)
    op.create_index('idx_user_session_user_active', 'user_session', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_user_session_user_id'), 'user_session', ['user_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('report', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('user', sa.String(length=20), nullable=False),
    sa.Column('content', sa.String(length=4096), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'), nullable=False),
    sa.ForeignKeyConstraint(['report'], ['dense_report.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_report'), 'comments', ['report'], unique=False)
    op.create_table('dense_image',
    sa.Column('id', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('report', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('image', mysql.BIGINT(display_width=20), nullable=False),
    sa.Column('_type', sa.Enum('source', 'result', name='imagetype'), nullable=False),
    sa.ForeignKeyConstraint(['image'], ['image.id'], ),
    sa.ForeignKeyConstraint(['report'], ['dense_report.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dense_image_image'), 'dense_image', ['image'], unique=False)
    op.create_index(op.f('ix_dense_image_report'), 'dense_image', ['report'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dense_image_report'), table_name='dense_image')
    op.drop_index(op.f('ix_dense_image_image'), table_name='dense_image')
    op.drop_table('dense_image')
    op.drop_index(op.f('ix_comments_report'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_user_session_user_id'), table_name='user_session')
    op.drop_index('idx_user_session_user_active', table_name='user_session')
    op.drop_index('idx_user_session_token', table_name='user_session')
    op.drop_index('idx_user_session_expires', table_name='user_session')
    op.drop_table('user_session')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_user_detail_avatar'), table_name='user_detail')
    op.drop_table('user_detail')
    op.drop_table('role_permission')
    op.drop_table('doctor')
    op.drop_index(op.f('ix_dense_report_user'), table_name='dense_report')
    op.drop_index(op.f('ix_dense_report_doctor'), table_name='dense_report')
    op.drop_table('dense_report')
    # ### end Alembic commands ###
